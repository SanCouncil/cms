HOW TO SETUP YOUR DEVELOPMENT ENVIRONMENT

[x] install drush: https://www.drupal.org/node/2366283
      (Basic reference for drush: https://www.digitalocean.com/community/tutorials/a-beginner-s-guide-to-drush-the-drupal-shell)
[ ] familiarize with GIT/DRUPAL workflow: https://www.drupal.org/node/803746  
[ ] Easy setup for drupal sites:
      drush dl drupal --drupal-project-rename=example
      cd example
      drush site-install standard --db-url='mysql://[db_user]:[db_pass]@localhost/[db_name]' --site-name=Example
[ ] Drupal-git workflow:
      http://www.jenlampton.com/blog/keeping-your-drupal-site-date-git-and-drush
    drush ups #Check currently applied patches. 
    git rm -r sites/all/modules/contrib/token # Delete the current version of the module.
    drush dl token # Download the new version of the module.
    git add sites/all/modules/contrib/token # Add the new version of the module.
    git commit -m "security update for token module" # Commit the update.
    drush updb # Run the database update script.
    
     https://www.acquia.com/blog/drupal-dev-workflow-everyone-git-flow-or-just-your-flow

[ ] rsync [user]@[host]: drupal7.db  # This assumes a cron-job is in place to keep drupal7.db up-to-date
[ ] mysql drupal7 -u root -proot < ./drupal7.db  # This assumes you are using the default VDD environment
[ ] rsync [user]@[host]: ~/www/prod/drupal7/sites/default/files/* ./drupal7/sites/default/files # Take data added on the production server and make it available in development enviroments

     
----------------------

HOW TO SETUP YOUR PRODUCTION ENVIRONMENT

[ ] mysqldump --defaults-file=~/.my.cnf -u [user] [db] > ~/drupal7.db  # This is called as a cron-job on the production server
[ ] drush updb # Call this when a new pull from git is performed (otherwise modules may not appear, etc.)

